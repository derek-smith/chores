{"version":3,"sources":["api/sheets.js","components/App.js","state/actions.js","state/reducer.js","state/store.js","serviceWorker.js","index.js"],"names":["init","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee2","wrap","_context2","prev","next","abrupt","Promise","resolve","window","gapi","load","_callee","auth","isSignedIn","name","_context","client","apiKey","creditials","api_key","clientId","client_id","discoveryDocs","scope","auth2","getAuthInstance","get","currentUser","getBasicProfile","getGivenName","stop","apply","this","arguments","signIn","_ref3","_callee3","_context3","sheets","getChoreList","_ref4","_callee4","response","_context4","spreadsheets","values","spreadsheetId","range","sent","result","useStyles","makeStyles","header","footer","top","bottom","flip","display","flexDirection","count","flex","marginLeft","marginRight","mapDispatchToProps","_ref2","dispatch","type","then","choreList","console","log","payload","catch","_x2","data","_x","connect","useEffect","classes","react_default","createElement","Fragment","AppBar","position","color","className","Toolbar","Typography","variant","length","List","map","chore","ListItem","key","onClick","ListItemText","disableTypography","root","ListItemIcon","IconButton","edge","AddBox_default","concat","Button","DEFAULT_STATE","reducer","state","undefined","action","objectSpread","filter","_","index","slicedToArray","price","parseFloat","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Boolean","location","hostname","match","ReactDOM","render","es","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eeb14a16.chunk.js","sourcesContent":["import creditials from './.credentials.json';\n\nexport const init = async () => {\n  return new Promise(resolve => {\n    window.gapi.load('client:auth2', async () => {\n      await window.gapi.client.init({\n        apiKey: creditials.api_key,\n        clientId: creditials.client_id,\n        discoveryDocs: ['https://sheets.googleapis.com/$discovery/rest?version=v4'],\n        scope: 'https://www.googleapis.com/auth/spreadsheets',\n      });\n      \n      const auth = window.gapi.auth2.getAuthInstance();\n\n      if (!auth) {\n        resolve({isSignedIn: false});\n        return;\n      }\n\n      const isSignedIn = auth.isSignedIn.get();\n\n      if (!isSignedIn) {\n        resolve({isSignedIn});\n        return;\n      }\n\n      const name = auth.currentUser.get().getBasicProfile().getGivenName();\n\n      resolve({isSignedIn, name});\n    });\n  });\n};\n\nexport const signIn = async () => {\n  const auth = window.gapi.auth2.getAuthInstance();\n\n  if (!auth) {\n    return {isSignedIn: false};\n  }\n\n  let isSignedIn = window.gapi.auth2.getAuthInstance().isSignedIn.get();\n\n  if (!isSignedIn) {\n    await window.gapi.auth2.getAuthInstance().signIn();\n    isSignedIn = window.gapi.auth2.getAuthInstance().isSignedIn.get();\n  }\n\n  if (!isSignedIn) {\n    return {isSignedIn};\n  }\n\n  const name = window.gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile().getGivenName();\n\n  return {isSignedIn, name};\n};\n\nexport const getChoreList = async () => {\n  const response = await window.gapi.client.sheets.spreadsheets.values.get({\n    spreadsheetId: '1jCoMWe-Xjsr3tf7V1Bf8iFb2k1v_2v1veFRztEyZNCA',\n    range: 'Chore List!A:B',\n  });\n  return response.result.values;\n};\n\nexport default {\n  getChoreList,\n  init,\n  signIn,\n}","import React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\n\nimport {getChoreList, signIn} from '../state/actions';\n\nimport {makeStyles} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\n// import ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\n\nconst useStyles = makeStyles(() => ({\n  header: {\n\n  },\n  footer: {\n    top: 'auto',\n    bottom: 0,\n  },\n  flip: {\n    display: 'flex',\n    flexDirection: 'row-reverse',\n  },\n  count: {\n    flex: 'unset',\n    marginLeft: 16,\n    marginRight: 32,\n  }\n}));\n\nconst App = ({choreList, getChoreList, isSignedIn, name, signIn}) => {\n  useEffect(() => {\n    if (isSignedIn) {\n      getChoreList();\n    }\n  }, [isSignedIn]); // eslint-disable-line\n\n  const classes = useStyles();\n\n  return (\n    <>\n     <AppBar position=\"fixed\" color=\"default\" className={classes.header}>\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\">\n            Chores\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      {(isSignedIn ? (\n        !choreList.length\n          ? `Hi ${name}`\n          : (\n            <List>\n              {choreList.map(chore => (\n                <ListItem key={chore.name} onClick={() => {/* TODO */}}>\n                  <ListItemText disableTypography={true} classes={{root: classes.count}}>\n                    <Typography variant=\"h4\" color=\"inherit\">\n                      {chore.count}\n                    </Typography>\n                  </ListItemText>\n                  <ListItemText>\n                    <Typography variant=\"h6\" color=\"inherit\">\n                      {chore.name}\n                    </Typography>\n                  </ListItemText>\n                  <ListItemIcon>\n                    <IconButton edge=\"end\">\n                      <AddBoxIcon />\n                    </IconButton>\n                    </ListItemIcon>\n                </ListItem>                      \n              ))}\n            </List>  \n          )\n      ) : (\n        <button onClick={signIn}>Sign in to Google</button>\n      ))}\n      <AppBar position=\"fixed\" color=\"default\" classes={{root: classes.footer}}>\n        <Toolbar classes={{root: classes.flip}}>\n          <Button variant=\"contained\" color=\"primary\">Track it</Button>\n        </Toolbar>\n      </AppBar>\n    </>\n  );\n}\n\nconst mapStateToProps = ({choreList, isSignedIn, name}) => ({\n  choreList,\n  isSignedIn,\n  name,\n});\n\nconst mapDispatchToProps = {getChoreList, signIn};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import sheets from '../api/sheets';\n\n// Note: `data` in `initSheetsApi()` and `signIn()` must match!!\n\nexport const initSheetsApi = () => dispatch => {\n  dispatch({type: 'INIT_SHEETS_API_PENDING'});\n  return sheets.init().then(data => {\n    dispatch({type: 'INIT_SHEETS_API_SUCCESS', payload: data});\n    if (data.isSignedIn) {\n      dispatch({type: 'SIGN_IN_SUCCESS', payload: data});\n    }\n  }).catch(() => {\n    dispatch({type: 'INIT_SHEETS_API_ERROR'});\n  });\n};\n\nexport const signIn = () => async dispatch => {\n  dispatch({type: 'SIGN_IN_PENDING'})\n  sheets.signIn().then(data => {\n    if (data.isSignedIn) {\n      dispatch({type: 'SIGN_IN_SUCCESS', payload: data});\n    } else {\n      dispatch({type: 'SIGN_IN_ERROR'});\n    }\n  }).catch(() => {\n    dispatch({type: 'SIGN_IN_ERROR'});\n  });\n};\n\nexport const getChoreList = () => async dispatch => {\n  dispatch({type: 'GET_CHORE_LIST_PENDING'});\n  sheets.getChoreList().then(choreList => {\n    console.log('getChoreList() choreList:', choreList);\n    dispatch({type: 'GET_CHORE_LIST_SUCCESS', payload: {choreList}});\n  }).catch(() => {\n    dispatch({type: 'GET_CHORE_LIST_ERROR'});\n  });\n};\n","const DEFAULT_STATE = {\n  isSignedIn: false,\n  name: '',\n  choreList: [],\n};\n\nconst reducer = (state = DEFAULT_STATE, action) => {\n  switch(action.type) {\n    case 'SIGN_IN_SUCCESS':\n      return {\n        ...state,\n        isSignedIn: action.payload.isSignedIn,\n        name: action.payload.name,\n      };\n    case 'GET_CHORE_LIST_SUCCESS':\n      return {\n        ...state,\n        choreList: action.payload\n          .choreList\n          .filter((_, index) => index > 0)\n          .map(([name, price]) => ({\n            name,\n            price: parseFloat(price) * 100,\n            count: 0,\n          })),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","import {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from './reducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  reducer,\n  composeEnhancers(\n    applyMiddleware(thunk)\n  ),\n);\n\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport './index.css';\nimport App from './components/App';\nimport store from './state/store';\nimport {initSheetsApi} from './state/actions';\n// import {setup as setupSheetsApi} from './api/sheets';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nstore.dispatch(initSheetsApi());\n\n// setupSheetsApi(store);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}