{"version":3,"sources":["logo.svg","api/sheets.js","components/App.js","state/actions.js","state/reducer.js","state/store.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","creditials","web","sheets","init","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee2","wrap","_context2","prev","next","abrupt","Promise","resolve","window","gapi","load","_callee","auth","isSignedIn","name","_context","client","apiKey","api_key","clientId","client_id","discoveryDocs","scope","auth2","getAuthInstance","get","currentUser","getBasicProfile","getGivenName","stop","apply","this","arguments","googleSignIn","_ref3","_callee3","_context3","signIn","mapDispatchToProps","dispatch","type","then","data","payload","catch","_x","connect","_ref2","react_default","createElement","className","src","logo","alt","concat","onClick","DEFAULT_STATE","reducer","state","length","undefined","action","objectSpread","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Boolean","location","hostname","match","ReactDOM","render","es","src_components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.09b1819f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// import creditials from './.credentials.json';\n\nconst creditials = {web: {}};\n\nexport const init = async () => {\n  return new Promise(resolve => {\n    window.gapi.load('client:auth2', async () => {\n      await window.gapi.client.init({\n        apiKey: creditials.web.api_key,\n        clientId: creditials.web.client_id,\n        discoveryDocs: ['https://sheets.googleapis.com/$discovery/rest?version=v4'],\n        scope: 'https://www.googleapis.com/auth/spreadsheets',\n      });\n      \n      const auth = window.gapi.auth2.getAuthInstance();\n\n      if (!auth) {\n        resolve({isSignedIn: false});\n        return;\n      }\n\n      const isSignedIn = auth.isSignedIn.get();\n\n      if (!isSignedIn) {\n        resolve({isSignedIn});\n        return;\n      }\n\n      const name = auth.currentUser.get().getBasicProfile().getGivenName();\n\n      resolve({isSignedIn, name});\n    });\n  });\n};\n\nexport const googleSignIn = async () => {\n  const auth = window.gapi.auth2.getAuthInstance();\n\n  if (!auth) {\n    return {isSignedIn: false};\n  }\n\n  let isSignedIn = window.gapi.auth2.getAuthInstance().isSignedIn.get();\n\n  if (!isSignedIn) {\n    await window.gapi.auth2.getAuthInstance().signIn();\n    isSignedIn = window.gapi.auth2.getAuthInstance().isSignedIn.get();\n  }\n\n  if (!isSignedIn) {\n    return {isSignedIn};\n  }\n\n  const name = window.gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile().getGivenName();\n\n  return {isSignedIn, name};\n}\n\nexport default {\n  init,\n  googleSignIn,\n}","import React from 'react';\nimport {connect} from 'react-redux';\nimport logo from '../logo.svg';\nimport './App.css';\n\nimport {signIn} from '../state/actions';\n\nconst App = ({isSignedIn, name, signIn}) => (\n  <div className=\"App\">\n    <header className=\"App-header\">\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      <p>\n        {isSignedIn ? (\n          `Hi ${name}`\n        ) : (\n          <button onClick={signIn}>Sign in to Google</button>\n        )}\n      </p>\n    </header>\n  </div>\n);\n\nconst mapStateToProps = ({isSignedIn, name}) => ({\n  isSignedIn,\n  name,\n});\n\nconst mapDispatchToProps = {signIn};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import sheets from '../api/sheets';\n\n// Note: `data` in `signIn()` and `initSheetsApi()` must match!!\n\nexport const signIn = () => async dispatch => {\n  dispatch({type: 'SIGN_IN_PENDING'})\n  sheets.googleSignIn().then(data => {\n    if (data.isSignedIn) {\n      dispatch({type: 'SIGN_IN_SUCCESS', payload: data});\n    } else {\n      dispatch({type: 'SIGN_IN_ERROR'});\n    }\n  }).catch(() => {\n    dispatch({type: 'SIGN_IN_ERROR'});\n  });\n};\n\nexport const initSheetsApi = () => dispatch => {\n  dispatch({type: 'INIT_SHEETS_API_PENDING'});\n  return sheets.init().then(data => {\n    dispatch({type: 'INIT_SHEETS_API_SUCCESS', payload: data});\n    if (data.isSignedIn) {\n      dispatch({type: 'SIGN_IN_SUCCESS', payload: data});\n    }\n  }).catch(() => {\n    dispatch({type: 'INIT_SHEETS_API_ERROR'});\n  });\n};","const DEFAULT_STATE = {\n  isSignedIn: false,\n  name: '',\n};\n\nconst reducer = (state = DEFAULT_STATE, action) => {\n  switch(action.type) {\n    case 'SIGN_IN_SUCCESS':\n      return {\n        ...state,\n        isSignedIn: action.payload.isSignedIn,\n        name: action.payload.name,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","import {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from './reducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  reducer,\n  composeEnhancers(\n    applyMiddleware(thunk)\n  ),\n);\n\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport './index.css';\nimport App from './components/App';\nimport store from './state/store';\nimport {initSheetsApi} from './state/actions';\n// import {setup as setupSheetsApi} from './api/sheets';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nstore.dispatch(initSheetsApi());\n\n// setupSheetsApi(store);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}